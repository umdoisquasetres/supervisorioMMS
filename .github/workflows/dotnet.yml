# Nome do fluxo de trabalho
name: Construir Aplicação .NET

# Gatilho: A automação é acionada em cada push para a branch "master".
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # A tarefa DEVE ser executada em uma máquina virtual Windows para projetos WPF.
    runs-on: windows-latest

    steps:
    # 1. Faz o checkout (download) do seu código para a máquina virtual
    - uses: actions/checkout@v4

    # 2. Instala a versão correta do .NET (8.0.x, conforme seu arquivo .csproj)
    - name: Instalar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # 3. Restaura as dependências do seu projeto (pacotes NuGet)
    - name: Restaurar dependências
      run: dotnet restore supervisorioMMS.sln

    # 4. Compila e publica seu projeto para criar o .exe
    #    Este passo é crucial para gerar o executável final.
    - name: Publicar a aplicação
      run: dotnet publish "supervisorioMMS/supervisorioMMS.csproj" -c Release --self-contained -r win-x64 -p:PublishSingleFile=true -o ./publish

    # 5. Opcional: Faz o upload do executável como um "artefato"
    #    Isso permite que você baixe o .exe gerado a partir da página da Action.
    - name: Upload do Artefato
      uses: actions/upload-artifact@v4
      with:
        name: supervisorioMMS-executavel
        path: ./publish/supervisorioMMS.exe
